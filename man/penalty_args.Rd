% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/args.R
\name{penalty_args}
\alias{penalty_args}
\title{Prepare penalty arguments}
\usage{
penalty_args(args)
}
\arguments{
\item{args}{A list of arguments. See See *Details*.}
}
\value{
A list of arguments
}
\description{
Prepare penalty arguments
}
\details{
The following arguments are supported:
\describe{
\item{\code{name}}{The penalty function. Currently, only \code{"adaptive_sparse_group_lasso"} is supported.}
\item{\code{alpha}}{The mixing parameter. Must be between 0 and 1. 1 is pure Lasso (default); 0 is pure group Lasso.}
\item{\code{a}}{The SCAD parameter, requires >=2. Default: 3.7.}
\item{\code{lambda}}{The penalty parameter. If \code{NULL} (default), a logarithmic grid search is used.}
\item{\code{n_lambda}}{The number of penalty parameters to use if \code{lambda} is \code{NULL} (default.)}
\item{\code{lambda_factor}}{The factor by which the penalty parameter is reduced overall (default: \code{1e-4}.)}
\item{\code{adaptive}}{The adaptive parameter. Must be non-negative (default: \code{0.}.)}
\item{\code{penalize_intercept}}{Whether to penalize the intercept. Must be \code{TRUE} (default) or \code{FALSE}.}
\item{\code{...}}{Additional arguments. Currently ignored.}
}

For the grid search, we first obtain the minimum \eqn{\lambda_\max} for which the solution is zero.
Then, a logarithmically-space sequence of \eqn{\lambda} values is generated starting from  \eqn{\lambda_\max} and
ending at \eqn{\lambda_\max \times \texttt{lambda_factor}}.
}
